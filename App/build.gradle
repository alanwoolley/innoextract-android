apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: 'versioning.gradle'

project.ext.version = "3.2.0"

ext.anko_version = '0.10.4'

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation project(':Service')
    implementation project(':GogAPI')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'com.karumi:dexter:6.2.3'
    implementation 'com.github.debop:koda-time:2.0.0'
    implementation 'joda-time:joda-time:2.12.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    kapt  "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
}

android {
    compileSdkVersion 33

    namespace 'uk.co.armedpineapple.innoextract'

    buildFeatures {
        viewBinding true
        dataBinding true
        renderScript true
        aidl true
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33

        versionName project.ext.version
        versionCode buildVersionCode()
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
        }
    }

    compileOptions {
        sourceCompatibility = 17
        targetCompatibility = 17
    }


    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            exclude "mips", "mips64", "armeabi"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
    lint {
        abortOnError false
    }
}

import com.android.build.OutputFile

ext.abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]

android.applicationVariants.all { variant ->

    if (variant.buildType.name == "release") {
        variant.outputs.each { output ->

            def baseAbiVersionCode =
                    project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))


            if (baseAbiVersionCode != null) {

                output.versionCodeOverride =
                        baseAbiVersionCode * 100000000 + buildVersionCode()
            }
        }
    }
}
